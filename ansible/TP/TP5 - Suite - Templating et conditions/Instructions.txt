Template Jinja et conditions
1- Modifiez l'inventaire afin de rajouter 2 nouveaux groupe, staging et proxy
    la machine client2 sera dans le groupe staging
    Le serveur ansible (aussi nommé reverse_proxy) fera office de reverse proxy, et sera à la fois dans les groupes prod et proxy


2- Faire une v3 de webapp.yaml (webapp-v3.yaml)
    Le playbook aura deux plays tels que : 
        - Un play qui installe et personalise nginx sur les machine de prod et staging
        - Un play qui installe nginx en mode reverse proxy sur les serveurs  proxy de production
            - la location /staging pour le serveurs de staging, 
            - la location /prod pour le serveur de production
            - Un template de conf nginx en mode proxy est fourni, il faudrait le déposer dans "/etc/nginx/conf.d/{{ fqdn }}.conf"
    La personnalisation des sites web se fera en utilisant un template Jinja pour modifier le 
    fichier index.html du serveur. 
    Ce playbook devra respecter le principe d'indempotence d'ansible
    Pour celà, les arguments clone, update et force du module git pourront vous aider            
    PS : Le module template sera utile
    On rajoutera un handler qui redémarre le service nginx si besoin


2 - On voudrait variabiliser le playbook en fonction des serveurs, on suppose qu'on a des serveurs Debian
    et des serveurs Centos
    Rajouter des conditions au playbook afin qu'il puisse se dérouler en fonction de la nature
    de l'OS du serveur cible (fact ansible_os_family à exploiter).
    Pour cela, il faudra créer une nouvelle version du playbook webapp (webapp-v4.yaml) et éventuellement une nouvelle 
    version du playbook nginx.yml (nginx-v2.yml)