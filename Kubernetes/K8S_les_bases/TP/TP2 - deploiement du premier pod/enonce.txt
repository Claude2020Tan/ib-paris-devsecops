Exercice : Déployez votre première application
- Créez un repertoire Kubernetes-training et un sous-dossier tp-2 et copiez vos manifests à l’interieur
    mkdir -p Kubernetes-training/tp-2
    cd Kubernetes-training/tp-2

- Ecrivez un manifest pod.yml pour déployer un pod avec l’image 
  mmumshad/simple-webapp-color  en précisant que la color souhaitée est la rouge
    => Le manifeste vous est fourni par le formatteur

- Lancez votre pod et vérifiez qu’il est bien en cours d’exécution
    kubectl apply -f pod.yml
    kubectl get po
    kubectl describe po simple-webapp-color

- Exposez votre pod en utilisant la commande kubectl port-forward 
  <nom de votre pod> 8080:8080 –-address 0.0.0.0
    kubectl port-forward simple-webapp-color 8080:8080 --address 0.0.0.0


- Vérifiez que l’application est bien joignagle en ouvrant le port 8080 
  de votre node

- Supprimez votre pod
      kubectl delete -f pod.yml

- Ecrivez un manifest nginx-deployment.yml pour déployer 2 replicas d’un 
  pod nginx (en version 1.18.0)
    => Le manifeste vous est fourni

- Lancez de deployment, vérifier le nombre de pods et vérifiez que le 
  deployment et le replicaset (ainsi que la version de l’image utilisée) ont 
  été créé
    kubectl apply -f nginx-deployment.yml
    kubectl describe deployment nginx-deployment
    kubectl get deploy
    kubectl get replicaset
    kubectl get  po
    kubectl get replicaset -o wide

- Modifiez le fichier nginx-deployment.yml afin d’utiliser l’image nginx en 
  version latest, appliquer la modification (kubectl apply -f nginx-deployment.yml)

- Que se passe t’il ? Combien de replicasets avez-vous ? 
  Quelle est l’image utilisée par le replicaset en cours d’utilisation ?

- Supprimez toutes les ressources créées et recréez les en utilisant 
  les commandes impératives

    + lancement du pod :    kubectl run --image=mmumshad/simple-webapp-color --env="APP_COLOR=red"  --restart=Never simple-webapp-color
    + Suppression du pod :  kubectl delete pod simple-webapp-color
    + Lancement du deploy:  kubectl create deployment --image=nginx:1.18.0 nginx-deployment
    + Scaling du replicas:  kubectl scale --replicas=2 deployment/nginx-deployment
    + upgrade de version :  kubectl set image deployment/nginx-deployment nginx=nginx    
    
- Enfin, poussez ce de tp sur votre github afin de conservez tous vos fichiers
    cd ..
    git init
    git add . 
    git commit -m "message de commit personnalisé"
    git remote add origin http://url_repos_git
    git push origin main


TIPS : Créer un fichier manifeste à partir d'une commande imperative : 
    kubectl create deploy ubuntu --image=ubuntu:devel --replicas=3 --dry-run=client  -o yaml > deploy_ubuntu.yml